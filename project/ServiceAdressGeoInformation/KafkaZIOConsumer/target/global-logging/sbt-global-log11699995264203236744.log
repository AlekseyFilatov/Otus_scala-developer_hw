[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\AlexFil\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\AlexFil\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 22.0.2)
[debug] Load.defaultLoad until apply took 233.0633ms
[debug]           Load.loadUnit: plugins took 147.2807ms
[debug]           Load.loadUnit: defsScala took 0.6839ms
[debug] [Loading] Scanning directory C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer\project
[debug]             Load.loadUnit: mkEval took 11.6052ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 31.7339 ms
[info] loading settings for project kafkazioconsumer-build from idea.sbt ...
[debug]               Load.resolveProject(kafkazioconsumer-build) took 74.0837ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kafkazioconsumer-build, base: C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer\project, plugins: List(<none>))) took 128.2487ms
[debug] [Loading] Done in C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer\project, returning: (kafkazioconsumer-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 623.0631ms
[debug]           Load.loadUnit: cleanEvalClasses took 14.5682ms
[debug]         Load.loadUnit(file:/C:/Users/AlexFil/IdeaProjects/ServiceAdressGeoInformation/KafkaZIOConsumer/project/, ...) took 799.9105ms
[debug]       Load.apply: load took 1135.4495ms
[debug]       Load.apply: resolveProjects took 18.6357ms
[debug]       Load.apply: finalTransforms took 138.0291ms
[debug]       Load.apply: config.delegates took 18.6069ms
[debug]       Load.apply: Def.make(settings)... took 930.6447ms
[debug]       Load.apply: structureIndex took 188.6017ms
[debug]       Load.apply: mkStreams took 3.3212ms
[info] loading project definition from C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4238.297ms
[debug]     Load.loadUnit: defsScala took 0.0052ms
[debug] [Loading] Scanning directory C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer
[debug]       Load.loadUnit: mkEval took 0.6294ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.0452 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 35.4565ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer, plugins: List(<none>))) took 41.9871ms
[debug] [Loading] Done in C:\Users\AlexFil\IdeaProjects\ServiceAdressGeoInformation\KafkaZIOConsumer, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 277.8068ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.0502ms
[debug]   Load.loadUnit(file:/C:/Users/AlexFil/IdeaProjects/ServiceAdressGeoInformation/KafkaZIOConsumer/, ...) took 4542.3374ms
[debug] Load.apply: load took 4591.7849ms
[debug] Load.apply: resolveProjects took 0.226ms
[debug] Load.apply: finalTransforms took 52.25ms
[debug] Load.apply: config.delegates took 1.0629ms
[debug] Load.apply: Def.make(settings)... took 138.0299ms
[debug] Load.apply: structureIndex took 57.1199ms
[debug] Load.apply: mkStreams took 0.0065ms
[info] set current project to KafkaZIOConsumer (in build file:/C:/Users/AlexFil/IdeaProjects/ServiceAdressGeoInformation/KafkaZIOConsumer/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58406 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58406, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to KafkaZIOConsumer (in build file:/C:/Users/AlexFil/IdeaProjects/ServiceAdressGeoInformation/KafkaZIOConsumer/)
[debug] > Exec(idea-shell, None, None)
